'use strict';

document.addEventListener('DOMContentLoaded', () => {

  console.warn('Починаю систематизувати знання JS');

  console.error('Error');
  console.log('Просте інформаційне повідомлення');
  console.dir('Відображення елементів вигляді JS обектів');
  console.table('Відображення елементів у табличній формі');

  console.error(' *** Початок видображення типів даних *** ');

  console.table([
    {
      'Тип даних': 'number',
      Значення: 'ціле число, число з плаваючою точкою',
    },
    {
      'Тип даних': 'string',
      Значення: 'строчка з літери, числа, слів або словосполучень',
    },
    {
      'Тип даних': 'boolean',
      Значення:
        'Логічний тип даних, яке має два варіанта значення : true або false',
    },
    {
      'Тип даних': 'null',
      Значення:
        'Cпеціальне примітивне значення, яке використовується для позначення відсутності або навмисного очищення значення змінної, тобто змінна явно не має жодного значення.',
    },
    {
      'Тип даних': 'undefined',
      Значення:
        'Якщо змінна була оголошена, але їй не було присвено жодного значення',
    },
    {
      'Тип даних': 'Object',
      Значення:
        "Складний тип даних, який використовується для зберігання колекцій структурованих данних у вигляді ключ-значення. Ключі - це рядки або символи, а значення - будь-які типи даних, включаючи інші об'єкти.",
    },
    {
      'Тип даних': 'Symbol',
      Значення:
        "Примітивний тип даних, який використовується для створення унікальних ідентифікаторів, гарантуеться, що кожне створене значення Symbol є унікальним, навіть якщо вони мають однакові описи. Їх часто використовують як ключі в об'єктах для уникнення конфліктів імен.",
    },
    {
      'Тип даних': 'BigInt',
      Значення:
        'Примітивний тип даних, який використовується для роботи з цілими числами, більшими за ті, що можуть бути представлені типом Number. Він дозволяє працювати з дуже великими цілими числами без втрати точності.',
    },
  ]);
  let userObject = {
    name: 'Ivan',
    age: 30,
  };

  console.log(userObject.name); 

  let id = Symbol('id');
  let user = {
    name: 'Ivan',
    [id]: 123,
  };

  console.log(user[id]); 


  let bigNumber = 1234567890123456789012345678901234567890;
  let anotherBigNumber = BigInt('1234567890123456789012345678901234567890');

  console.log(
    'Виводитьcя просто велике число в типу Number : ' +
      bigNumber +
      ' \n' +
      'Виводитьcя теж число, але оброблене за допомогою функції BigInt()  :' +
      anotherBigNumber
  ); 

  console.error('\n' + ' *** Кінець видображення типів даних *** ');

  console.error('\n' + ' *** Перетворення типів даних *** ');

  console.log('Як працювати з String');
  const stringDataType = 'Це строчка яка може буди завгодно якої довжини';
  console.info('Тип даних строка : ', typeof stringDataType);
  const numberToSting = 123;
  console.info('Число : ', numberToSting);
  console.info('Тип даних число: ', typeof numberToSting);
  let rezNumberToSting = String(numberToSting);
  console.info('Вивожу число я строку 123: ', rezNumberToSting); 
  console.info(
    'Перетворення тип даних 123 воно є строчкой: ',
    typeof rezNumberToSting
  ); 

  const otherNumberToSting = numberToSting.toString();

  console.info(
    'Інший спосіб перетворенння числа в строчку: ',
    otherNumberToSting
  ); 
  console.info('Тип даних: ', typeof otherNumberToSting);

  console.log(' ');
  console.log('Як працювати з Number');
  const stringNamberDataType = '555';
  console.info('Вихідні дані: ', stringNamberDataType);
  console.info(
    'Я створив змінну з типом даних - число: ',
    typeof stringNamberDataType
  );
  const getstringNamberDataType = Number(stringNamberDataType);
  console.info('Перетворив строку в число : ', getstringNamberDataType);


  console.info('Тип даних число : ', typeof getstringNamberDataType);
  console.log(' ');
  const strToNum = 'шість';
  console.info('Число шість літерами  : ', strToNum);
  console.info('Тип даних число : ', typeof strToNum);
  const getStrToNum = Number(strToNum);
  const getStr2Num = parseInt(strToNum);
  console.info('Результат  : ' + getStrToNum + ' ' + typeof getStrToNum);
  console.info('Результат  : ' + getStr2Num + ' ' + typeof getStr2Num);

  console.log(' ');

  console.log('Як працювати з Boolean');
  const booleanDataType = true;
  console.info('Змінна :', booleanDataType);
  console.info('Тип даних логічний :', typeof booleanDataType);

  console.log(' ');

  console.log('Як працювати з Null');
  const nullDataType = null; 
  console.info('Зміна :', nullDataType);
  console.info('Тип даних nullDataType :', typeof nullDataType);

  console.log(' ');

  console.log('Як працювати з Undefined');
  const undefinedDataType = undefined; 
  console.info('Зміна :', undefinedDataType);
  console.info('Тип даних undefinedDataType :', typeof undefinedDataType);

  console.log(' ');

  console.log('Як працювати з Object');
  const obgectDataType = {};
  console.info('Зміна :', obgectDataType);
  console.info('Тип даних obgectDataType :', typeof obgectDataType);
  const str = 'Hello';
  const obj = Object(str); 

  console.log(' ');

  console.log('Як працювати з Symbol');
  console.log('Зміна :', Symbol('description')); 
  console.log('Тип даних symbol :', typeof Symbol('description'));

  console.log(' ');

  console.log('Як працювати з BigInt');
  const numToBigint = 123;
  console.info('Зміна :', numToBigint);
  console.info('Тип даних зміній :', typeof numToBigint);
  const getNumToBigint = BigInt(numToBigint);
  console.info('Нова зміна :', getNumToBigint);
  console.info('Тип даних зміній після перетворення :', typeof getNumToBigint);


  console.error('\n' + ' **** Оператори в JS *** ');

  console.info('Унарний тип оператора - :', -29);

  console.info('Унарний тип оператора + :', +29);
  console.info('Тип даних число з унанрним оператором - :', typeof -29);
  console.info('Тип даних число з унанрним оператором + :', typeof +29);
  console.log(' ');
  console.info('Арифметичні оператори :');
  console.log(' ');
  console.info('Бінарний тип оператора + ( 4 + 6 = ) :', 4 + 6);
  console.info('Бінарний тип оператора - ( 4 - 6 = ) :', 4 - 6);
  console.info('Бінарний тип оператора * ( 4 * 6 = ) :', 4 * 6);
  console.info('Бінарний тип оператора / ( 4 / 6 = ) :', 4 / 6);
  console.info('Бінарний тип оператора ** ( 4 ** 6 = ) :', 4 ** 6);
  console.info('Бінарний тип оператора % ( 4 % 2 = ) :', 4 % 2);
  console.info('Бінарний тип оператора % ( 35 % 2 = ) :', 35 % 2);
  console.log(' ');
  const ageTer = 19;
  console.info(
    'Тернарний тип оператора ( const age >= 18 ? "adult" : "child") :',
    ageTer >= 18 ? 'adult' : 'child'
  );
  console.error(
    '\n' + ' **** Скорочений розгорнутий запис оператора присвоєння *** '
  );
  console.info('Простое присваивание const yyy = 14; ');

  let xxx = 3;
  let yyy = 14;

  console.info(`Перша змінна - ${xxx}, друга змінна - ${yyy} `);

  xxx = xxx + yyy;

  console.info(
    'Простe присвоення зі складанням X = X + Y ; ' +
      `  ${xxx} = ${xxx} + ${yyy}; ` +
      xxx
  );

  xxx += yyy;
  console.info(
    'Простe присвоення зі складанням X += Y ; ' + ` ${xxx} += ${yyy}  ; ` + xxx
  );
  console.log(' ');

  xxx = xxx - yyy;
  console.info(
    'Простe присвоення з відніманням X = X - Y ; ' +
      `   ${xxx} = ${xxx} - ${yyy} ; ` +
      xxx
  );

  xxx -= yyy;
  console.info(
    'Простe присвоення з відніманням X = X - Y ; ' + ` ${xxx} -= ${yyy}; ` + xxx
  );
  console.log(' ');
  xxx = xxx * yyy;
  console.info(
    'Простe присвоення з множенням X = X * Y ; ' +
      `   ${xxx} = ${xxx} * ${yyy}; ` +
      xxx
  );

  xxx *= yyy;
  console.info(
    'Простe присвоення з множенням X *= Y ; ' + ` ${xxx} *= ${yyy};  ` + xxx
  );
  console.log(' ');
  xxx = xxx / yyy;
  console.info(
    'Простe присвоення з діленням X = Х / Y ; ' +
      ` ${xxx} = ${xxx} / ${yyy} ` +
      xxx
  );

  xxx /= yyy;
  console.info(
    'Простe присвоення з діленням X /= Y ; ' + ` ${xxx} /= ${yyy} ` + xxx
  );

  console.log(' ');
  xxx = xxx % yyy;
  console.info(
    'Простe присвоення з діленням з залишком X = X % Y ; ' +
      ` ${xxx} = ${xxx} % ${yyy} ` +
      xxx
  );

  xxx %= yyy;

  console.info(
    'Простe присвоення з діленням з залишком X %= Y ; ' +
      `  ${xxx} %= ${yyy} ` +
      xxx
  );

  let ter = 14;
  let terDo = 2;
  ter %= terDo;
  console.info(
    'Простe присвоення з діленням з залишком ter %= terDo ; ' +
      `  14 %= ${terDo} ` +
      ` відповідь ` +
      ter
  );

  let terOne = 15;
  let terDoOne = 2;
  terOne %= terDoOne;
  console.info(
    'Простe присвоення з діленням з залишком ter %= terDo ; ' +
      `  15 %= ${terDoOne} ` +
      ` відповідь ` +
      terOne
  );


  console.error('\n' + ' **** Кінець оператори в JS *** ');
  console.log(' ');
  console.error('\n' + ' **** Як працювати з префіксним інкрементом в JS *** ');
  console.log(' ');

  let resIncrem = 4;
  console.log('Крок 0. Стартове значення resIncrem', resIncrem);
  console.log(' ');
  resIncrem = resIncrem++;
  console.log(`Крок 1. Результат інкремента ${resIncrem} `, resIncrem);
  resIncrem = ++resIncrem;
  console.log(`Крок 2. Результат інкремента ${resIncrem} `, resIncrem);
  resIncrem = ++resIncrem;
  console.log(`Крок 3. Результат інкремента ${resIncrem} `, resIncrem);
  resIncrem = ++resIncrem;
  console.log(`результат інкремента ${resIncrem} `, resIncrem);

  console.log(' ');

  console.error('\n' + ' **** Як працювати з префіксним дескреентом в JS *** ');
  console.log(' ');
  let preffDeskr = 18;
  console.log('Крок 0. Стартове значення preffDeskr', preffDeskr);
  console.log(' ');
  preffDeskr = --preffDeskr;
  console.log('Крок 1. Результат дескремента ', preffDeskr);
  preffDeskr = --preffDeskr;
  console.log('Крок 2. Результат дескремента ', preffDeskr);
  preffDeskr = --preffDeskr;
  console.log('Крок 3. Результат дескремента ', preffDeskr);
  preffDeskr = --preffDeskr;
  console.log('Крок 4. Результат дескремента ', preffDeskr);
  console.log(' ');
  console.error(
    '\n' + ' **** Як працювати з постфіксним інкрементом в JS *** '
  );
  console.log(' ');
  let postfixIncrement = 14;
  console.log('Крок 0. Стартове значення postfixIncrement', postfixIncrement);
  postfixIncrement = postfixIncrement++;
  console.log(
    'Крок 1. Результат постфіксного інкремента postfixIncrement',
    postfixIncrement
  );
  postfixIncrement = postfixIncrement++;
  console.log(
    'Крок 2. Результат постфіксного інкремента postfixIncrement',
    postfixIncrement
  );

  console.log(' ');
  console.error(
    '\n' + ' **** Як працювати з постфіксним Дескрементом в JS *** '
  );
  console.log(' ');
  let postfixDescrem = 14;
  console.log('Крок 0. Стартове значення postfixDescrem', postfixDescrem);
  postfixDescrem = postfixDescrem--;
  console.log(
    'Крок 1. Результат постфіксного інкремента postfixDescrem',
    postfixDescrem
  );
  postfixDescrem = postfixDescrem--;
  console.log(
    'Крок 2. Результат постфіксного інкремента postfixDescrem',
    postfixDescrem
  );
  console.error(
    '\n' +
      ' **** Як працювати з префіксним декрементом в циклі віл 5 до 0 в бік зменшення в JS *** '
  );
  for (let i = 5; i > 0; --i) {
    console.log(i);
  }

  console.log(' ');

  console.error(
    '\n' +
      ' **** Як працювати з постфіксним декрементом в циклі віл 5 до 0 в бік зменшення в JS *** '
  );
  for (let i = 5; i > 0; i--) {
    console.log(i);
  }
  console.log(' ');

  console.error(
    '\n' +
      ' **** Як працювати з префіксним інкрементом в циклі від 0 до 9 в бік збільшення в JS *** '
  );
  for (let i = 0; i < 9; ++i) {
    console.log(i);
  }
  console.log(' ');

  console.error(
    '\n' +
      ' **** Як працювати з постфіксним інкрементом в циклі від 0 до 9 в бік збільшення в JS *** '
  );
  for (let i = 0; i < 9; i++) {
    console.log(i);
  }

  console.info(' **** Логічне перетворення усіх типів даних **** ');
  console.log(' ');
  console.info('Отримати число із рядка 40 ');
  const numbToString = '40';
  console.log(typeof numbToString);
  console.log(Number(numbToString));
  console.log(typeof Number(numbToString));
  console.log(' ');
  console.info('Отримати число із рядка сорок');
  const numbToStringLine = 'сорок';
  console.log(typeof numbToStringLine);
  console.log(Number(numbToStringLine));
  console.log(typeof Number(numbToStringLine));
  console.log(' ');

  const trueToNumber = true;
  console.log('Отримати число із true - 1 ');
  console.log(Number(trueToNumber));

  console.log('Отримати число з false - 0 ');
  console.log(Number(false));

  console.log('Отримати число з null - 0 ');
  console.log(Number(null));

  console.log('Отримати число з undefined - NaN ');
  console.log(Number(undefined));

  console.log('Отримати число з BigInt - число ');
  console.log(Number(getNumToBigint));

  console.log('Отримати число з undefined - NaN ');
  console.log(Number(undefined));

  console.log('Отримати число з рядка рядок - NaN ');
  console.log(Number('рядок'));

  console.log('Отримати число з пустого рядка - 0 ');
  console.log(Number(''));

  console.log('Отримати рядка з числа 30 - 30 ');
  console.log(String(30));
  console.log(typeof String(30));

  console.log('Отримати рядок з логічного типу true - true ');
  console.log(String(true));
  console.log(typeof String(true));

  console.log('Отримати рядок з логічного типу null - null ');
  console.log(String(null));
  console.log(typeof String(null));

  console.log('Отримати рядок з логічного типу undefined - undefined ');
  console.log(String(undefined));
  console.log(typeof String(undefined));

  console.log('Логічне значення із числа 30 - true ');
  console.log(Boolean(40));
  console.log(typeof Boolean(40));

  console.log('Логічне значення із числа 0 - true ');
  console.log(Boolean(0));
  console.log(typeof Boolean(0));

  console.log('Логічне значення із числа -30 - true ');
  console.log(Boolean(-30));
  console.log(typeof Boolean(-30));

  console.log('Логічне значення із рядка "-30" - true ');
  console.log(Boolean('-30'));
  console.log(typeof Boolean('-30'));

  console.log('Логічне значення із рядка "рядок" - true ');
  console.log(Boolean('рядок'));
  console.log(typeof Boolean('рядок'));

  console.log('Логічне значення із рядка "" - false ');
  console.log(Boolean(''));
  console.log(typeof Boolean(''));

  console.log('Логічне значення із рядка " " - true ');
  console.log(Boolean(' '));
  console.log(typeof Boolean(' '));

  console.log('Логічне значення із null - false ');
  console.log(Boolean(null));
  console.log(typeof Boolean(null));

  console.log('Логічне значення із undefined - false ');
  console.log(Boolean(undefined));
  console.log(typeof Boolean(undefined));

  console.warn('Автоматичне перетворення типів');
  const numOne = 10;
  const logicOne = true;
  const divideOne = numOne / logicOne;
  console.log(
    `divideOne = numOne / logicOne : (${numOne} / ${logicOne} ) = ${divideOne} `
  );

  const numTwo = 20;
  const logicTwo = true;
  const logicFalse = false;
  const divideTwo = numTwo / logicTwo;
  const divideTwoFalse = numTwo / logicFalse;
  console.log(
    `divideTwo = numTwo / logicTwo : (${numTwo} / ${logicTwo} ) = ${divideTwo} `
  );
  console.log(' ');
  console.log(
    `divideTwoFalse = numTwo / logicFalse : (${numTwo} / ${logicFalse} ) = ${divideTwoFalse} `
  );
  console.log(' Ділити на нуль неможливо. В JS результат - Infinity  ');
  console.log(
    `divideTwoFalse = numTwo / 0 : (${numTwo} / 0 ) = ${divideTwoFalse} `
  );


  console.log(' ');
  console.log('Конкатенація / сумування');
  console.log(' ');

  console.log(`3417 = 34 + '17' Результат дії : `, 34 + '17');
  console.log(`51 = 34 + 17 Результат дії : `, 34 + 17);

  let testRez = 1 / 0;
  console.warn('Домашне завдання №1 ', testRez);

  console.warn('Домашне завдання №2 : String(testRez) : ', String(testRez));

  console.warn('Домашне завдання №3 : Boolean(testRez) : ', Boolean(testRez));

  console.warn('Домашне завдання №4 : true - 1 = ', true - 1);
  console.warn('Домашне завдання №5 : true + 4 = ', true + 4);

  console.warn('Домашне завдання №6 : 9 + false = ', 9 + false);
  console.warn('Домашне завдання №7 : 9 "/ false = ', 9 / false);

  console.warn('Домашне завдання №8 : null * 2 = ', null * 2);
  console.warn('Домашне завдання №9 : undefined = ', typeof undefined);

  console.warn('Домашне завдання №10 : undefined = ', +undefined);
  console.warn('Домашне завдання №11 : undefined = ', Number(undefined));

  console.warn('Домашне завдання №12 : 11 + +"12" = ', 11 + +'12');

  console.log(' **** Операторы: співставлення ****  ');

  console.warn(`Оператор більше: 5 > 4 - true : Підтверження `, 5 > 4);
  console.warn(
    `Оператор більше або дорівнює : 5 >=6 - false : Підтверження `,
    5 >= 6
  );
  console.warn(`Оператор меньше : 5 < 6 - true : Підтверження `, 5 < 6);

  console.warn(
    `Оператор меньше або дорівнює : 5 <=4 - false : Підтверження `,
    5 <= 4
  );

  console.warn(`Не строге порівняння : 5 == 5  - true : Підтверження `, 5 == 5);
  console.warn(
    `Не строге порівняння : 5 == "5"  - true : Підтверження `,
    5 == '5'
  );
  console.warn(`Cтроге порівняння : 5 === 5  - true : Підтверження `, 5 === 5);
  console.warn(
    `Cтроге порівняння : 5 === "5"  - false : Підтверження `,
    5 === '5'
  );
  console.warn(
    `Cтроге порівняння : 5 === "25"  - false : Підтверження `,
    5 === '25'
  );
  console.warn(
    `Cтроге порівняння : 5 === "gnm"  - false : Підтверження `,
    5 === 'gnm'
  );

  console.warn(
    `Cтроге порівняння : "пять" === "чотири"  - false : Підтверження `,
    'пять' === 'чотири'
  );

  console.warn(`Не cтроге нерівно :   5 != 6  - true : Підтверження `, 5 != 6);
  console.warn(`Не cтроге нерівно :   5 != 5  - false : Підтверження `, 5 != 5);
  console.warn(
    `Не cтроге нерівно :   5 != "5"  - false : Підтверження `,
    5 != '5'
  );

  console.warn(
    `Cтроге нерівно :   5 !== "5"  - true : Підтверження `,
    5 !== '5'
  );

  console.warn(
    `Cтроге нерівно :   5 !== "25"  - true : Підтверження `,
    5 !== 25
  );
  const str1 = 'Перемога';
  console.log(
    "Цей код виведе код Unicode символу на першій позиції ('П') у рядку 'Перемога' : ",
    str1.codePointAt(0)
  );
  console.log(
    "Цей код виведе код Unicode символу на 7-мій позиції ('г') у рядку 'Перемога' : ",
    str1.codePointAt(6)
  );

  console.log(' **** Cпівставлення різних типів **** ');

  console.log(' 5 > true ', 5 > true);
  console.log(' 2== {} ({} => NaN) ', 2 == {});
  console.log(' null ==  0  : ', null == 0); 
  console.log(' null ===  0 : ', null === 0); 
  console.log(' null == undefined : ', null == undefined); 
  console.log(' null === undefined : ', null === undefined); 

  console.info(' ');
  console.info('**** Як правильно використовувати логічні оператори **** ');
  console.info(' ');
  console.info(' || або ');
  console.info(' ');


  let x = 0;
  let y = 'Hello';
  let z = null;

  let result = x || y || z; 

  console.log('result = x || y || z :', (result = x || y || z)); 
  console.log('0 || "Hello" || null', 0 || 'Hello' || null); 

  console.log('4 < 1 || 5 == 3 || 5 > 4', 4 < 1 || 5 == 3 || 5 > 4); 
  console.log('null || undefined || false', null || undefined || false); 

  console.log('Задача 1. false || true : ', false || true); 
  console.log('Задача 2. true || false  : ', true || false); 
  console.log('Задача 3. true || true || false  : ', true || false || true); 
  console.log('Задача 4. false || false  : ', false || false); 
  console.log('Задача 5. 2 || 3  : ', 2 || 3); 

  console.log('Задача 5.1. "2" || 3  : ', '2' || 3); 
  console.log('Задача 5.2. "2&&?" || 3  : ', '2&&?' || 3); 
  console.log('Задача 5.3. " " || 3  : ', ' ' || 3); 
  console.log('Задача 5.4. 0 || 3  : ', 0 || 3); 
  console.log('Задача 5.5. "Єто строка" || 3  : ', 'Єто строка' || 3); 

  console.log('Задача 6. 0 || 3 || 3 || 4  : ', 0 || 3 || 3 || 4); 
  console.log('Задача 7. 10 || 3 || 3 || 4  : ', 10 || 3 || 3 || 4); 
  console.log('Задача 8. 0 || 0 || 0 || 1  : ', 0 || 0 || 0 || 1); 
  console.log('Задача 9. 0 || 0 || 0 || 0  : ', 0 || 0 || 0 || 0); 
  console.log('Задача 10. "0" || 0 || 0 || 0  : ', '0' || 0 || 0 || 0); 
  console.log(
    'Задача 11. "" || "" || "" || " " || 0  : ',
    '' || '' || '' || ' ' || 0
  ); 
  console.log(
    'Задача 12. "" || "" || "" || " " || 1  : ',
    '' || '' || '' || '' || 1
  ); 

  console.log(
    'Задача 13. null || undefined || false  : ',
    null || undefined || false
  ); 

  console.log(
    'Задача 13. null || false || undefined : ',
    null || false || undefined
  ); 

  console.log(
    'Задача 14. false || undefined || null : ',
    false || undefined || null
  ); 

  console.log(
    'Задача 15. false || undefined || null || 54 : ',
    false || undefined || null || 54
  ); 

  console.log(
    'Задача 16. false || undefined || 45 || null || 54 : ',
    false || undefined || 45 || null || 54
  ); 


  console.info(' ');
  console.info(' &&  і  ');
  console.info(' ');


  console.log('Задача 1. false && true : ', false && true); 
  console.log('Задача 2. true && false : ', true && false); 
  console.log('Задача 3. true && true : ', true && true); 
  console.log('Задача 4. false && false : ', false && false); 

  console.log('Задача 5. 2 && 4 : ', 2 && 4); 

  console.log(
    'Задача 6. null && undefined && false : ',
    null && undefined && false
  ); 

  console.log(
    'Задача 7. 4 && null && undefined && false : ',
    4 && null && undefined && false
  ); 

  console.log(
    'Задача 8. null && 78  && undefined && false : ',
    null && 78 && undefined && false
  ); 
  console.log(
    'Задача 9. undefined && null && false : ',
    undefined && null && false
  ); 

  console.log(
    'Задача 10. 0 && 10 && undefined && " " && null && false : ',
    0 && 10 && undefined && ' ' && null && false
  ); 
  console.log(
    'Задача 11. 4 < 1 && 5 == 3 && 5 > 4 : ',
    4 < 1 && 5 == 3 && 5 > 4
  ); 
  console.log(
    'Задача 12. 4 >= 1 && 5 > 3 && 5 > 4 : ',
    4 >= 1 && 5 > 3 && 5 > 4
  ); 

  console.info(' ');
  console.info(' !  не ');
  console.info(' ');



  console.log('Задача 1 !false : ', !false); 
  console.log('Задача 2 !true : ', !true); 
  console.log('Задача 3 !200 : ', !200); 
  console.log('Задача 4 !0 : ', !0); 
  console.log('Задача 5 !"isne" : ', !'isne'); 
  console.log('Задача 6 !null : ', !null); 
  console.log('Задача 7 !undefined : ', !undefined); 
  console.log('Задача 8 !NaN : ', !NaN); 
  console.log('Задача 9 !null : ', !null); 
  console.log('Задача 10 !!null : ', !!null); 
  console.log('Задача 10 !!200 : ', !!200); 
  console.info(' ');


  console.info(' ');
  console.info(' ?? Оператор нульового злиття ');
  console.info(' ');


  console.log('Задача 1. null ?? 1 : ', null ?? 1); 
  console.log('Задача 2. null ?? 3431 : ', null ?? 3431); 
  console.log('Задача 3. undefined ?? 3431 : ', undefined ?? 3431); 
  console.log(
    'Задача 3. null ?? "Alex" ?? "anonym" : ',
    null ?? 'Alex' ?? 'anonym'
  ); 

  console.log('Задача 4. undefined ?? null ?? 0 : ', undefined ?? null ?? 0); 
  console.log('Задача 5. undefined ?? null  : ', undefined ?? null); 
  console.log('Задача 6. null ?? undefined : ', null ?? undefined); 

  let name;
  console.log(name ?? 'anonym');
  console.log('Задача 7. name ?? "anonym" : ', name ?? 'anonym'); 
  console.log('Задача 8. name ?? undefined ?? 0 : ', name ?? undefined ?? 0); 

  console.info(' ');

  let tooltheme = {
    theme: 'темна',
    font: null,
  };

  let chaiceTheme = tooltheme.theme ?? 'світла';
  let chaiceFont = tooltheme.font ?? 'Arial';

  console.info('Обрана тема', chaiceTheme); 
  console.info('Обраний шрифт', chaiceFont); 

  function setToolSite(param) {
    let lang = param.lang ?? 'українська';
    let theme = param.theme ?? 'світла';

    console.log(`Мова: ${lang}, Тема: ${theme}`);
  }

  console.info('Робота функції  setToolSite  ');

  console.info(' ');

  setToolSite({ lang: 'англійська' }); 

  setToolSite({}); 


  console.info(' ');
  console.info(' ||=  Оператор логічого присвоення ');
  console.info(' ');


  let ageLogPriYly = null;
  ageLogPriYly ||= 18;
  console.log(
    'Задача 1. Працює оператор логічного присвоення ageLogPriYly ||= 18 : ',
    ageLogPriYly
  ); 

  let ageLogPriYlyOne = null;
  ageLogPriYlyOne ||= null;
  console.log(
    'Задача 2. Працює оператор логічного присвоення ageLogPriYlyOne ||= 18 : ',
    ageLogPriYlyOne
  ); 

  let ageLogPriYlyTwo = null;
  ageLogPriYlyTwo ||= undefined;
  console.log(
    'Задача 3. Працює оператор логічного присвоення ageLogPriYlyTwo ||= undefined : ',
    ageLogPriYlyTwo
  ); 

  let ageLogPriYlyThree = null;
  ageLogPriYlyThree ||= 'lines';
  console.log(
    'Задача 4. Працює оператор логічного присвоення ageLogPriYlyThree ||= "lines" : ',
    ageLogPriYlyThree
  ); 

  let ageLogPriYlyFoure = undefined;
  ageLogPriYlyFoure ||= 3 * 4;
  console.log(
    'Задача 5. Працює оператор логічного присвоення ageLogPriYlyFoure ||= 3*4 : ',
    ageLogPriYlyFoure
  ); 
  console.info(' ');
  let nameUse = '';
  nameUse ||= 'Анонім';

  console.log('Імя користувача :', nameUse); 

  let nameUseTwo = 'Оля';
  nameUseTwo ||= 'Анонім';

  console.log('Імя користувача :', nameUseTwo); 

  let quantity = 0;
  quantity ||= 10;

  console.log('Кількість людей: ', quantity); 

  let nameUseTRee = '';
  nameUseTRee = nameUseTRee || 'Анонім';

  console.log('Імя користувача', nameUseTRee); 
  console.info(' ');

  console.info(' ');
  console.info(' &&= Оператор логічного происвоення ');
  console.info(' ');


  let ageLogPriAnd = null;
  ageLogPriAnd &&= 3 * 4;
  console.log(
    'Задача 1. Працює оператор логічного присвоення ageLogPriAnd &&= 3*4 : ',
    ageLogPriAnd
  ); 

  let ageLogPriAndOne = undefined;
  ageLogPriAndOne &&= 13 * 4;
  console.log(
    'Задача 2. Працює оператор логічного присвоення ageLogPriAndOne &&= 13 * 4 : ',
    ageLogPriAndOne
  ); 

  let ageLogPriAndTree = '';
  ageLogPriAndTree &&= 15 * 4;
  console.log(
    'Задача 3. Працює оператор логічного присвоення ageLogPriAndTree &&= 15 * 4 : ',
    ageLogPriAndTree
  ); 

  let ageLogPriAndFoure = 'Пробел';
  ageLogPriAndFoure &&= 15 * 4;
  console.log(
    'Задача 4. Працює оператор логічного присвоення ageLogPriAndFoure &&= 15 * 4 : ',
    ageLogPriAndFoure
  ); 


  console.info(' ');
  console.info(' ??= Оператор нульового происвоення ');
  console.info(' ');

  let ageNullPris = null;
  ageNullPris ??= 78 * 4;
  console.log(
    'Задача 1. Працює оператор нульового присвоення ageNullPris ??= 78 * 4 : ',
    ageNullPris
  ); 

  let height;
  let width;
  let area = (height ??= 20) * (width ??= 34);

  console.log(
    `Задача 2. Працює оператор нульового присвоення (height ??= 20) * (width ??= 34) : ${area} `
  );

  console.warn('Початок не систематизованої інформації з JS');


  console.warn('Кінець не систематизованої інформації з JS');
});
'use strict';

document.addEventListener('DOMContentLoaded', () => {
  console.info(' ');
  console.info(' *** Умовні розгалуження *** ');
  console.info(' ');

  console.info(' **** Просте умовне розгалуження **** ');

  console.log(' Задача 1 ');

  let ageMan = 20;
  if (ageMan < 18) {
    console.log('Перед нами: Дитина');
  } else if (ageMan > 70) {
    console.log('Перед нами: Старий');
  } else {
    console.log('Перед нами: Дорослий');
  }

  console.log(' Задача 2 ');

  console.log(' ');

  const srtString = 'Hello';

  if (srtString == 'hello') console.log('Hello');
  else console.log('By!');

  console.log(' Задача 3 Тернарний оператор  ');

  console.log('  ');
  const logicy = true;
  console.log(logicy ? true : false);

  console.log(' Задача 4 Декілька тернарних операторів ');
  console.log('  ');

  let num = 5; 

  console.log(num < 10 ? 'num < 10' : num == 10 ? 'num == 10' : 'num > 10');

  console.log(
    ' **** Пропрацьовую умовне ротзгалуження з різними умовами **** '
  );
  console.log('  ');

  console.log(' Умова 1 ');

  let umove1 = 0;
  if (umove1) {
    console.log(' *** Умова 1 true *** ');
  } else {
    console.log('  *** Умова 1 false *** ');
  }

  console.log('  ');
  console.log(' Умова 2 ');

  let umove2 = 1;
  if (umove2) {
    console.log(' *** Умова 2 true *** ');
  } else {
    console.log('  *** Умова 2 false *** ');
  }

  console.log('  ');
  let umove3 = '';
  if (umove3) {
    console.log(' *** Умова 3 true *** ');
  } else {
    console.log('  *** Умова 3 false *** ');
  }

  console.log('  ');
  let umove4 = ' ';
  if (umove4) {
    console.log(' *** Умова 4 true *** ');
  } else {
    console.log('  *** Умова 4 false *** ');
  }

  console.log('  ');
  let umove5 = 'рядок';
  if (umove5) {
    console.log(' *** Умова 5 true *** ');
  } else {
    console.log('  *** Умова 5 false *** ');
  }

  console.log('  ');
  if (null) {
    console.log(' *** Умова 6 true *** ');
  } else {
    console.log('  *** Умова 6 false *** ');
  }

  console.log('  ');
  if (undefined) {
    console.log(' *** Умова 7 true *** ');
  } else {
    console.log('  *** Умова 7 false *** ');
  }
  console.log('  ');
  if (45 / 0) {
    console.log(' *** Умова 8 true *** ');
  } else {
    console.log('  *** Умова 8 false *** ');
  }

  console.log('  ');
  if (NaN) {
    console.log(' *** Умова 9 true *** ');
  } else {
    console.log('  *** Умова 9 false *** ');
  }

  console.log('  ');
  if ({}) {
    console.log(' *** Умова 10 true *** ');
  } else {
    console.log('  *** Умова 10 false *** ');
  }

  console.log('  ');
  if (false) {
    console.log(' *** Умова 11 true *** ');
  } else {
    console.log('  *** Умова 11 false *** ');
  }

  console.log('  ');
  if (true) {
    console.log(' *** Умова 12 true *** ');
  } else {
    console.log('  *** Умова 12 false *** ');
  }

  console.log(
    ' **** Пропрацьовую умовне ротзгалуження з різними умовами: або || **** '
  );

  console.log('  ');
  if (4 > 5 || null) {
    console.log(' *** Умова 13 true *** ');
  } else {
    console.log('  *** Умова 13 false *** ');
  }

  console.log('  ');
  if (4 > 5 || null || undefined) {
    console.log(' *** Умова 14 true *** ');
  } else {
    console.log('  *** Умова 14 false *** ');
  }

  console.log('  ');
  if (4 > 5 || null || undefined || 0) {
    console.log(' *** Умова 15 true *** ');
  } else {
    console.log('  *** Умова 15 false *** ');
  }

  console.log('  ');
  if (4 > 5 || null || undefined || 0 || '') {
    console.log(' *** Умова 16 true *** ');
  } else {
    console.log('  *** Умова 16 false *** ');
  }
  console.log('  ');
  if (4 > 5 || null || undefined || 0 || '' || NaN) {
    console.log(' *** Умова 17 true *** ');
  } else {
    console.log('  *** Умова 17 false *** ');
  }

  console.log('  ');
  if (4 > 5 || null || undefined || 0 || '' || NaN || !12) {
    console.log(' *** Умова 18 true *** ');
  } else {
    console.log('  *** Умова 18 false *** ');
  }

  console.log('  ');
  if (4 > 5 || null || undefined || 0 || '' || NaN || !12 || false) {
    console.log(' *** Умова 19 true *** ');
  } else {
    console.log('  *** Умова 19 false *** ');
  }

  console.log('  ');
  if (
    4 > 5 ||
    null ||
    undefined ||
    0 ||
    '' ||
    NaN ||
    !12 ||
    false ||
    4 === ' '
  ) {
    console.log(' *** Умова 20 true *** ');
  } else {
    console.log('  *** Умова 20 false *** ');
  }

  console.log('  ');
  if (
    4 > 5 ||
    null ||
    undefined ||
    0 ||
    '' ||
    NaN ||
    !12 ||
    false ||
    4 === ' ' ||
    true
  ) {
    console.log(' *** Умова 21 true *** ');
  } else {
    console.log('  *** Умова 21 false *** ');
  }

  console.log('  ');
  if (
    4 > 5 ||
    null ||
    undefined ||
    0 ||
    '' ||
    true ||
    NaN ||
    !12 ||
    false ||
    4 === ' '
  ) {
    console.log(' *** Умова 22 true *** ');
  } else {
    console.log('  *** Умова 22 false *** ');
  }
  console.log('  ');

  console.log(
    ' **** Пропрацьовую умовне ротзгалуження з різними умовами: i  -  && **** '
  );

  if (4 > 5) {
    console.log(' *** Задача && - Умова 1 true *** ');
  } else {
    console.log(' *** Задача && - Умова 1 false *** ');
  }
  console.log('  ');

  if (4 < 5) {
    console.log(' *** Задача && - Умова 2 true *** ');
  } else {
    console.log(' *** Задача && - Умова 2 false *** ');
  }
  console.log('  ');

  if (4 < 5 && true) {
    console.log(' *** Задача && - Умова 3 true *** ');
  } else {
    console.log(' *** Задача && - Умова 3 false *** ');
  }
  console.log('  ');

  if (13 < 5 && true) {
    console.log(' *** Задача && - Умова 4 true *** ');
  } else {
    console.log(' *** Задача && - Умова 4 false *** ');
  }
  console.log('  ');

  if (4 < 5 && true) {
    console.log(' *** Задача && - Умова 3 true *** ');
  } else {
    console.log(' *** Задача && - Умова 3 false *** ');
  }
  console.log('  ');

  if (23 >= 23 && true) {
    console.log(' *** Задача && - Умова 4 true *** ');
  } else {
    console.log(' *** Задача && - Умова 4 false *** ');
  }
  console.log('  ');

  if (23 >= 23 && true && undefined) {
    console.log(' *** Задача && - Умова 5 true *** ');
  } else {
    console.log(' *** Задача && - Умова 5 false *** ');
  }
  console.log('  ');

  if (0 && 23 >= 23 && true && undefined) {
    console.log(' *** Задача && - Умова 6 true *** ');
  } else {
    console.log(' *** Задача && - Умова 6 false *** ');
  }
  console.log('  ');

  if (0 && 23 >= 23 && true && !undefined) {
    console.log(' *** Задача && - Умова 7 true *** ');
  } else {
    console.log(' *** Задача && - Умова 7 false *** ');
  }
  console.log('  ');
  const r = !undefined;
  console.log(r);
  console.log('  ');

  if (23 >= 23 && true && undefined && 0 && '') {
    console.log(' *** Задача && - Умова 8 true *** ');
  } else {
    console.log(' *** Задача && - Умова 8 false *** ');
  }
  console.log('  ');

  if (0 && 23 >= 23 && true && undefined && 0 && '' && ' ') {
    console.log(' *** Задача && - Умова 9 true *** ');
  } else {
    console.log(' *** Задача && - Умова 9 false *** ');
  }
  console.log('  ');
  if (
    0 &&
    23 >= 23 &&
    true &&
    undefined &&
    0 &&
    '' &&
    ' ' &&
    NaN &&
    !12 &&
    false &&
    4 === 0
  ) {
    console.log(' *** Задача && - Умова 10 true *** ');
  } else {
    console.log(' *** Задача && - Умова 10 false *** ');
  }
  console.log('  ');
  const rr =
    0 &&
    23 >= 23 &&
    true &&
    undefined &&
    0 &&
    '' &&
    ' ' &&
    NaN &&
    !12 &&
    false &&
    4 === 0;
  console.log('Змінна rr        : ', rr);
  console.log('  ');
  const rrr =
    10 &&
    23 >= 23 &&
    true &&
    !undefined &&
    !0 &&
    ' ' &&
    ' ' &&
    !NaN &&
    !!12 &&
    !false &&
    4 !== 0; 

  console.log('Змінна rrr        : ', rrr);
  console.log('  ');

  console.log('  ');
  const tttttrr =
    0 ||
    23 >= 23 ||
    true ||
    undefined ||
    0 ||
    '' ||
    ' ' ||
    NaN ||
    !12 ||
    false ||
    4 === 0;
  console.log('Змінна tttttrr        : ', tttttrr);
  console.log('  ');

  console.log(' **** Вирішую задачі плл темі **** ');

  console.warn(' *** 1. Перевірка на парність *** ');
  const patnnumber = 1300;
  if (patnnumber % 2 == 0) {
    console.log('Задане число парне');
  } else {
    console.log('Задане число не парне');
  }
  console.log('  ');
  console.warn(' *** 2. Визначення більшого числа *** ');
  const oneNavedNumber = 13,
    tvoNavedNumber = 13;
  if (oneNavedNumber > tvoNavedNumber) {
    console.log('Перше число більше другого');
  } else if (oneNavedNumber < tvoNavedNumber) {
    console.log('Перше число меньше другого');
  } else {
    console.log('Перше число та друге число рівні');
  }

  console.log('  ');
  console.warn(' *** 3. Перевірка на позитивність *** ');
  const checkNumberTest = 0;
  if (checkNumberTest < 0) {
    console.log('Задане число негативне');
  } else if (checkNumberTest === 0) {
    console.log('Задане число Є нуль');
  } else {
    console.log('Задане число позиитвним');
  }

  console.warn(' *** 4. Перевірка на вік *** ');

  console.warn(' *** 5. Визначення кварталу *** ');

  console.warn(' *** 6. Оцінка успішності *** ');

  console.warn(' *** 7. Калькулятор з умовами *** ');

  console.warn(' *** 8. Перевірка на високосний рік *** ');

  console.warn(' *** 9. Перевірка діапазону *** ');

  console.warn(' *** 10. Визначення дня тижня *** ');


  console.log('  ');
  console.warn(' *** інструкція Switch *** ');
  console.log('  ');
  const fruit = 'apple';
  switch (fruit) {
    case 'orange':
      console.log('Працює інструкція Switch, задача 1:  orange');
      break;
    case 'pear':
      console.log('Працює інструкція Switch, задача 1: pear');
      break;
    case 'apple':
      console.log('Працює інструкція Switch, задача 1: apple');
      break;
    case 'nut':
      console.log('Працює інструкція Switch, задача 1: nut');
      break;
    default:
      console.log('Працює інструкція Switch, задача 1: unknow fruit');
  }
  console.log('  ');

  console.log('Switch вирішення завдання на парне не парне . Задача 2 ');
  console.log('  ');

  const numCheck = 4;
  switch (numCheck) {
    case 2:
    case 4:
    case 6:
    case 8:
    case 10:
      console.log('Switch. Задача 2. Парне');
      break;
    case 1:
    case 3:
    case 5:
    case 7:
    case 9:
      console.log('Switch. Задача 2. Не парне');
      break;
    default:
      console.log('Switch. Задача 2. Не відомо');
  }
  console.log('  ');

  if (
    numCheck == 2 ||
    numCheck == 4 ||
    numCheck == 6 ||
    numCheck == 8 ||
    numCheck == 10
  ) {
    console.log('Switch. Задача 3. Парне');
  } else if (
    numCheck == 1 ||
    numCheck == 3 ||
    numCheck == 5 ||
    numCheck == 7 ||
    numCheck == 9
  ) {
    console.log('Switch. Задача 3. Не парне');
  } else {
    console.log('Switch. Задача 3. Не відомо');
  }
  console.log('  ');
  console.log('  ');
  console.log('  ');
});

console.log('Switch. Задача 4. Вартість кімнат в квартирі');

let rooms = +document.querySelector('#get-data'),
  strRoom = '';
switch (rooms) {
  case 1:
    strRoom = 'Вартість $15 000';
    break;
  case 2:
    strRoom = 'Вартість $25 000';
    break;
  case 3:
    strRoom = 'Вартість $37 000';
    break;
  case 4:
    strRoom = 'Вартість $49 000';
    break;
  default:
    strRoom = 'Більше 5 кімнат в квартирі не передбачено у нашому проекті';
}
document.querySelector('#push-data').textContent = strRoom;

let day = '',
  today = new Date();
switch (today.getDay()) {
  case 0:
    day = 'воскресенье';
    break;
  case 1:
    day = 'понедельник';
    break;
  case 2:
    day = 'вторник';
    break;
  case 3:
    day = 'среда';
    break;
  case 4:
    day = 'четверг';
    break;
  case 5:
    day = 'пятница';
    break;
  case 6:
    day = 'суббота';
}
console.log(`Сегодня ${day}, ${today.toLocaleString()}`);

let select = document.getElementById('cheese'),
  outputPar = document.getElementById('output'),
  result = '';

select.addEventListener('change', setPizza);

function setPizza() {
  const choice = select.value;
  switch (choice) {
    case '':
      result = 'піца не вибрана';
      break;

    case 'mozarella':
      result = 'Маргарита';
      break;

    case 'filadelfia':
      result = 'Филадельфия';
      break;

    case 'chedder':
      result = 'Чеддер';
      break;

    case 'parmezan':
      result = 'Пармезан';
      break;

    case 'mramor':
      result = 'Мраморний';
      break;

    case 'dor-blue':
      result = 'Дор Блю';
      break;

    default:
      result = 'Зробіть вибір повторно';
  }
  outputPar.textContent = `Пицца  ${result}`;
}

function chooseFruitImg() {
  let fruitChioce = fruit.value,
    imgURL = '';
  let fruits = {
    apple: 'https://source.unsplash.com/iqIJE3Jo8YM/300x300',
    banana: 'https://source.unsplash.com/fczCr7MdE7U/300x300',
    grape: 'https://source.unsplash.com/vGQ49l9I4EE/300x300',
    kiwi: 'https://source.unsplash.com/a9rxefN9vgY/300x300',
    peach: 'https://source.unsplash.com/l60tPwIN0uo/300x300',
    pinapple: 'https://source.unsplash.com/Lkf6FmPu25U/300x300',
    melon: 'https://source.unsplash.com/AbwqpFnBDms/300x300',
    watermelon: 'https://source.unsplash.com/1C55VIfJSuQ/300x300',
  };
  switch (fruitChioce) {
    case 'apple':
      imgURL = 'https://source.unsplash.com/I58f47LRQYM/300x300';
      break;
    case 'banana':
      imgURL = 'https://source.unsplash.com/aEwNCA_uiVg/300x300';
      break;
    case 'grape':
      imgURL = 'https://source.unsplash.com/UqgTtfaikio/300x300';
      break;
    case 'kiwi':
      imgURL = 'https://source.unsplash.com/1oMGgHn-M8k/300x300';
      break;
    case 'peach':
      imgURL = 'https://source.unsplash.com/Ze0QgKf2u0k/300x300';
      break;
    case 'pinapple':
      imgURL = 'https://source.unsplash.com/-E3dv3zRGEk/300x300';
      break;
    case 'melon':
      imgURL = 'https://source.unsplash.com/MQ82YY6iuPc/300x300';
      break;
    case 'watermellon':
    case 'watermelon':
      imgURL = 'https://source.unsplash.com/izi5AnlbRIA/300x300';
      break;
    default:
      imgURL = 'https://source.unsplash.com/zeFy-oCUhV8/300x300';
  }

  fruitImg.src = imgURL;
  fruitImgObj.src =
    fruits[fruitChioce] || 'https://source.unsplash.com/M_xIaxQE3Ms/300x300';

  fruitImg.alt =
    fruitImg.title =
    fruitImgObj.alt =
    fruitImgObj.title =
      fruitChioce;
}
'use strict';

document.addEventListener('DOMContentLoaded', () => {
  console.info(' ');
  console.info(' *** Усі цикли Javascript *** ');
  console.info(' ');

  console.info(' *** Цикли с параметрами *** ');

  for (let i = 0; i < 10; i++) {
    console.log(i);
  }

  console.info('Змінна іі окремо від самого цикла ');
  let ii = 0;
  for (; ii < 10; ) {
    console.log(ii);
    ii++;
  }
  console.info(' ');
  console.info(' Цикл із передумовою / цикл с предусловием ');

  let pp = 0;

  while (pp < 10) {
    console.log(pp);
    pp++;
  }
  console.info(' ');

  let ppp = 100;
  while (ppp > 10) {
    console.log(ppp);
    ppp--;
  }

  console.info(' ');
  console.info(' Цикл із післяумовою / цикл с послеусловием ');
  console.info(' ');

  console.info(
    'Змінна дорівнює 1, поки змінна меньше 0, інкременація постфіксна  '
  );
  let tt = 1;

  do {
    console.log(tt < 0);
    tt++;
  } while (tt < 0);

  console.info(' ');
  console.info(
    '*** Перехід до наступної ітерації / переход к следующей итерации ***'
  );
  console.info(
    '*** Якщо змінну ділять на 2 и в залишку віддає 1 крок пропускається ***'
  );

  for (let i = 0; i < 10; i++) {
    if (i % 2 == 1) continue;
    console.log(i);
  }

  console.info(' ');
  console.info(' Переривання циклу / преривание цикла ');

  console.info(
    ' Якщо задана змінна задана 2 , цикл закінчити та вийти з циклу '
  );
  let e = 0;
  let s = 2;
  while (e < 7) {
    if (s == 2) break;
    console.log(s);
    s++;
  }

  console.info(' ');
  console.info(' Використання міток у циклі / использование меток в цикле ');

  outer: for (let i = 0; i < 10; i++) {
    for (let j = 0; j < 10; j++) {
      if (j == 4) break outer;
      console.log(j);
    }
  }

  console.info('Форма інкремента має значення');
  console.log(' Використання префиксної форми інкремента в циклі');
  console.info(' ');
  let postfix = 0;
  while (++postfix < 4) {
    console.log('Вивожу змінну postfix в цикле : ', postfix);
  }

  console.info(' ');

  console.info(' *** Використання постфіксної формі інкременту в циклі *** ');

  while (postfix++ < 4) {
    console.log(postfix);
  }

  console.info(' ');
});
'use strict';

document.addEventListener('DOMContentLoaded', () => {
  console.info(' ');
  console.info(' *** Працюю з освоенням з Functions Javascript *** ');
  console.info(' ');
});